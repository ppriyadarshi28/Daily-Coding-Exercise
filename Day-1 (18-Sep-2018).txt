1.

#Check if the given number is prime.
#The function 'isprime(num)' returns True if the number passsed as an argument is prime else it reuturn False
import math

def isprime(num):
    '''
    DOCSTRING: Function to check if a given number is prime
    INPUT: Number to be checked for prime
    OUTPUT: True if the number is prime else False
    '''
    
    if (num > 2 and num%2 == 0) or (num < 2) :
        return False
    for i in range(3,int(math.sqrt(num))+1,2):
        if num%i == 0:
            return False
            break
    else:
        return True

##########################################################################################################################

2. 

#Print all the prime numbers till the given number
#The function 'listprimes(n)' will list all the prime numbers till n.
import math

def listprimes(n):
    '''
    DOCSTRING: Function to list the prime numbers till n
    INPUT: Number upto which the prime numbers need to be printed
    OUTPUT: List of primes till n
    '''
    primes = [2]
    for num in range(3,n+1,2):
        for i in range(3,int(math.sqrt(num))+1,2):
            if num%i == 0:
                break
        else:
            primes.append(num)
    return primes

##########################################################################################################################

3.

#Function ispalindrome(num) prints the reverse of the given number and checks if the number is a palindrome
def ispalindrome(num):
    '''
    DOCSTRING: Fuction to print he reverse of the given number and check if the number is a palindrome
    INPUT: Number to be checked for palindrome
    OUTPUT: The reverse of the given number and prints if the number is a palindrome
    '''
    
    num_copy = num
    rev = 0
    
    while num_copy > 0:
        rem = int(num_copy%10)
        rev = rev*10 + rem
        num_copy = int(num_copy/10)
        
    print (f'The reverse of {num} is {rev}')
    
    if num == rev:
        print (f'{num} is a palindrome')
    else:
        print (f'{num} is not a palindrome')

##########################################################################################################################

4.

#Function dec2bin(num) gives the binary representation of a given decimal integer num

def dec2bin(num):
    '''
    DOCSTRING: Function to convert the decimal integer into it's binary equivalent
    INPUT: Any decimal positive integer
    OUTPUT: Binary equivalent of the given number
    '''
    binary = []
    while num > 0:
        binary.append(str(int(num%2)))
        num = int(num/2)
    return ''.join(binary[::-1])
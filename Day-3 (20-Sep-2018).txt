1. 

ASKED IN AMAZON

Problem Statement: Given a 2D array of integers sorted in ascending order both row and column wise. Find out the number of negative elements in the array.

Condition: Time complexity of the solution should be O(n+m) where n is the number of rows and m is the number of columns

Example: For the array [[-5,-4,-3,1],[-4,-3,1,2],[-3,1,2,3]], the output woulld be 6 since there are 6 negative elements

---------------------------------------------------------------------------------------------------------------------------------------------
Solution:

def arr_2d(row,col):
    '''
    DOCSTRING: Function to generate a 2D array in Python
    INPUT: Number of rows, Number of columns
    OUTPUT: 2D array
    '''
    
    #Default 2D array with every element as 0
    arr = [[0 for j in range(col)] for i in range(row)]
    
    for i in range(row):
        for j in range(col):
            arr[i][j] = int(input(f'Enter any number at index [{i},{j}]: '))      
    return arr

def neg_element_cnt_2d_arr(arr):
    '''
    DOCSTRING: Function to count number of negative element in a given 2D array sorted in ascending order both
               row and column wise.
    INPUT: 2D Array
    OUTPUT: Count of negative elements
    '''
    i = 0
    j = len(arr[0]) - 1
    row = len(arr) - 1
    col = len(arr[0]) - 1
    count = 0
    
    while i <= row and j >= 0:
        if arr[i][j] > 0:
            j = j - 1
        else:
            count += j + 1
            i = i + 1
    return count
        
#Creating 2D array
arr = arr_2d(3,4)
print (f'Given array is {arr}')

#Finding number of negative elements in the 2D array
print (f'Number of negative elements in the array are: {neg_element_cnt_2d_arr(arr)}')
